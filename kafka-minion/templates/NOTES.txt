#######################################################################
-- Kafka Minion has been deployed --
#######################################################################
You can test it's functionality by creating a port forward and visiting it's /metrics endpoint.
Please take note that it may take up to a couple minutes until Kafka Minion has scraped your
Kafka's offsets topic. Take a look at it's log messages to see when it's done.

IMPORTANT: In order to support high availability during rolling updates Kafka Minion will only
mark itself ready once it has finished processing the __consumer_offsets topic. By default it grants
up to 10min and 10 seconds to do so. If your Topic is too big or Kafka Minion has not enough CPU resources
this time may be exceeded and you got to tweak the readiness probe configs.
#######################################################################

1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range $.Values.ingress.paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host }}{{ . }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "kafka-minion.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get svc -w {{ include "kafka-minion.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "kafka-minion.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "kafka-minion.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080/metrics to see the exported metrics"
  kubectl port-forward $POD_NAME 8080:{{ .Values.telemetry.port }}
{{- end }}
